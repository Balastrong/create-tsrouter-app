import {
  Outlet,
  RouterProvider,
  createRootRoute,
  createRoute,
  createRouter,
} from "@tanstack/solid-router";
// import { TanStackRouterDevtools } from "@tanstack/router-devtools";
import { render } from 'solid-js/web'
<% for(const route of routes) { %>import <%= route.name %> from "<%= route.path %>";
<% } %><% if (routes.length > 0) { %>
import Header from "./components/Header";
<% } %>

import "./styles.css";

import App from "./App.<%= jsx %>";

const rootRoute = createRootRoute({
  component: () => (
    <>
      <% if (routes.length > 0) { %><Header /><% } %>
      <Outlet />
      {/* <TanStackRouterDevtools /> */}
    </>
  ),
});

const indexRoute = createRoute({
  getParentRoute: () => rootRoute,
  path: "/",
  component: App,
});

const routeTree = rootRoute.addChildren([indexRoute<%= routes.map(route => `, ${route.name}(rootRoute)`).join('') %>]);

const router = createRouter({
  routeTree,
  defaultPreload: "intent",
  scrollRestoration: true,
});

declare module '@tanstack/solid-router' {
  interface Register {
    router: typeof router
  }
}

function MainApp() {
  return (
    <>
      <RouterProvider router={router} />
    </>
  )
}

const rootElement = document.getElementById('app')!
render(() => <MainApp />, rootElement!)
